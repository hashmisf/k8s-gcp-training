**************************************************************************************
				Kubernets Lab
**************************************************************************************

Configure the Environment and Create GKE Cluster
Execute below command (one by one)
-------------------------------------------------
  #Set project ID
	gcloud config set project [PROJECT_ID]

  #Set default region/zone
	gcloud config set compute/region us-central1
	gcloud config set compute/zone us-central1-a

   #Enable GKE/GCR API's
	gcloud services enable container.googleapis.com
	gcloud services enable containerregistry.googleapis.com

   #Create Kubernetes Engine Cluster (Nodes) named 'hello-cluster'
	gcloud container clusters create hello-cluster --num-nodes=2

   #Generating a kubeconfig entry 
	gcloud container clusters get-credentials hello-cluster

   #Go to yaml files directory
	cd ~/k8s-gcp-training/k8s/

-------------------------------------------------
		POD
-------------------------------------------------

1.1 Create Pod

	kubectl create -f mypod.yaml

1.2 Get/Describe/View Pod

	kubectl get pods

	kubectl get pods -l app=myapp-pod 

	kubectl get pod -o wide

	kubectl describe pod my-pod

	kubectl logs my-pod

1.3 Open Terminal to Pod

	kubectl exec -it my-pod -- /bin/sh

	curl localhost

	exit

1.4 Delete Pod

	kubectl delete pod my-pod

-------------------------------------------------
		Deployment
-------------------------------------------------
2.1 Apply YAML

	kubectl create -f mydeployment.yaml 

2.2 Get/Describe/View Pod

	kubectl get deployments 

	kubectl describe deployments my-deployment 

-------------------------------------------------
		Service
-------------------------------------------------

3.1 Create Service

	kubectl create -f myservice.yaml

3.2 Get/Describe Service

	kubectl get service

	kubectl describe service my-service

	kubectl get endpoints

3.3 Test Service

	kubectl create -f test-pod.yaml

	kubectl exec -it mytest-pod -- /bin/sh

	wget -O- <service-cluster-ip>:8000

	wget -O- my-service:8000

	exit

3.4 Delete Service 

	kubectl delete service my-service

3.5 Create Service with Load Balancer

	kubectl create -f myservice-lb.yaml

3.6 Access application through Browser
	
	Open Browser and hit Service EXTERNAL-IP

3.7 Delete Service 

	kubectl delete service my-service-lb

3.8 Delete Deployment

	kubectl delete deploy my-deployment
-------------------------------------------------
     Scaling / Horizontal Pod Auto Scaling
-------------------------------------------------

16.1 Create deployment

	kubectl create -f deployment_ro.yaml

16.2 Scale the deployment to 5 replicas

	kubectl scale deploy my-deployment --replicas=5

	kubectl get po

	kubectl describe deploy my-deployment

16.3 Autoscale the deployment, pods between 5 and 10, targeting CPU utilization at 80%

	kubectl autoscale deployment my-deployment --min=5 --max=10 --cpu-percent=80

16.4 Get all Horizontal Pod Autoscaler

	kubectl get hpa

16.5 Delete the deployment and the horizontal pod autoscaler

	kubectl delete deploy my-deployment

	kubectl delete hpa my-deployment

16.6 Delete all deployment, replicaset, pods, servics

	kubectl delete deploy,rs,po,svc --all

-------------------------------------------------
		Delete Cluster
-------------------------------------------------

	gcloud container clusters delete hello-cluster

-------------------------------------------------
		General
-------------------------------------------------
100.1 View all objects in current namespace

	kubectl get all

100.2 View all objects in all namespaces

	kubectl  get all --all-namespaces

100.3 Delete all objects created out of that file
	
	kubectl delete -f <file-name>

100.4 Apply/Re-apply file (will not work for all objects e.g. Pod)
	
	kubectl apply -f <file-name>

100.5 Get all Nodes in Cluster

	kubectl get nodes -o wide

100.6 Explain any Kubernetes API object

	kubectl explain <pod/rs/deploy/....> --recursive

100.7 Explain Pod

	kubectl explain pod --recursive

100.8 Explain Pod's Specification

	kubectl explain pod.spec --recursive

100.9 Explain Pod's Specification and grep usage of envFrom

	kubectl explain pod.spec --recursive | grep envFrom -A 10

100.10 Get help for any Kubernetes command

	kubectl help <get/describe/delete/....>

100.11 Display Resource (CPU/Memory/Storage) usage of pods

	kubectl top pods